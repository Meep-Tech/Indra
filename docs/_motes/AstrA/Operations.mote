# Type
## Unary
### Prefix
### Suffix

## Binary

### Infix
#### Spaced

#### Chained

## Ternary
There are no true ternary operators in AstrA, but they can be created with existing binary operators.

### If Else
```cs
y: x ?: y !: z
```

## Switch
Switches use the => charachter to branch between entries depending on a predicate.
- Functions similar to an if true operator (`?:`) but only one of the statements in a sequence is executed.


[Exs:
  ```cs
  add >>
    >a, >b
    
    ## integer logic
    .a.#dec => ...etc

    ## decimal logic
    .a.#int => ...etc
  ```
  ```cs
  add >>
    >a, >b
    .a.#dec??:...etc!!:a.#int??:...etc
  ```
  ```cs
  add >>
    >a, >b
    
    .a.#dec ?? ...etc
      !! a.#int ?? ...etc
  ```
  ```cs
  add >>
    >a, >b
    
    ## decimal logic
    .a.#dec => 
      ...etc

    ## int logic
    .a.#int => 
      ...etc

    --- // section separator for consecutive switch statements

    ## a second switch
    .a.#str => 
      ...etc
    !! => // non-existant case 
      ...etc
  ```
]